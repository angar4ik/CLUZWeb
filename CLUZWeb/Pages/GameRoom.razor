@page "/gameroom/{Guid:guid}"
@inherits Base

@if (_game != null && _player != null)
{
    <h5>Game: @_game.Name</h5>
    <p>
        <h6>
            Name: @_player.Name
        </h6>
    </p>
    <p>
        <span class="badge badge-pill badge-primary">@_player.Role</span>
        <span class="badge badge-pill badge-primary">@_game.TimeOfDay</span>
    </p>
}
else
{
    <h4>Game doesn't exist</h4>
}


@if (_players.Count() == 0)
{
    <p><em>Nothing to display...</em></p>
}
else
{
    <ul class="list-group">
        @foreach (var p in _players)
        {
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <div class="align-items-center d-flex justify-content-between @IsGhost(p)">
                @if (p.ProfilePicUrl != "")
                {
                    <div class="image-cropper margin-right">
                        <img src="@p.ProfilePicUrl" alt="avatar" class="profile-pic">
                    </div>
                }
                <div>
                    <h5>@p.Name</h5>
                    <p>
                        @if (_game.AdminGuid == p.Guid)
                        {
                            <span class="badge badge-pill badge-primary">Admin</span>
                        }
                        <span class="badge badge-pill badge-primary">@p.State</span>
                        <span class="badge badge-primary badge-pill">@p.VoteCount</span>
                    </p>
                </div>
            </div>
            @if (GetActionBtnType() != Models.GameAction.None)
            {
                <div>
                    <button type="button" class="btn btn-info" disabled=@(IsDisabledActionBtn(p)) @onclick="() => Action(p)">@(GetActionBtnType().ToString())</button>
                </div>
            }
        </li>
        }
    </ul>

    <div class="p-4">
        @if (_game.AdminGuid == _player.Guid && !(_game.Status == Models.GameState.Locked))
        {
            <button class="btn btn-primary" @onclick="() => Start(_game)">
                Start
            </button>
        }

        @if (_game.Status == Models.GameState.Locked)
        {
            <button class="btn btn-primary" disabled=@(IsDisabledReadyBtn()) @onclick="() => Ready(_player)">
                Ready
            </button>
        }

        <button class="btn btn-danger float-right disabled" @onclick="() => Leave(_game)">
            Leave
        </button>
    </div>
}
